<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bijinsuo.business.repository.MaintenanceMarginRateMapper">

    <resultMap type="MaintenanceMarginRate" id="MaintenanceMarginRateResult">
        <result property="id"    column="id"    />
        <result property="symbol"    column="symbol"    />
        <result property="tier"    column="tier"    />
        <result property="notionalValueBegin"    column="notional_value_begin"    />
        <result property="notionalValueEnd"    column="notional_value_end"    />
        <result property="maxLeverage"    column="max_leverage"    />
        <result property="maintenanceMarginRate"    column="maintenance_margin_rate"    />
        <result property="maintenanceAmount"    column="maintenance_amount"    />
    </resultMap>

    <sql id="selectMaintenanceMarginRateVo">
        select id, symbol, tier, notional_value_begin, notional_value_end, max_leverage, maintenance_margin_rate, maintenance_amount from maintenance_margin_rate
    </sql>

    <select id="selectMaintenanceMarginRateList" parameterType="MaintenanceMarginRate" resultMap="MaintenanceMarginRateResult">
        <include refid="selectMaintenanceMarginRateVo"/>
        <where>
            <if test="symbol != null  and symbol != ''"> and symbol = #{symbol}</if>
            <if test="tier != null "> and tier = #{tier}</if>
            <if test="notionalValueBegin != null "> and notional_value_begin = #{notionalValueBegin}</if>
            <if test="notionalValueEnd != null "> and notional_value_end = #{notionalValueEnd}</if>
            <if test="maxLeverage != null "> and max_leverage = #{maxLeverage}</if>
            <if test="maintenanceMarginRate != null "> and maintenance_margin_rate = #{maintenanceMarginRate}</if>
            <if test="maintenanceAmount != null "> and maintenance_amount = #{maintenanceAmount}</if>
        </where>
    </select>

    <select id="selectMaintenanceMarginRateById" parameterType="Long" resultMap="MaintenanceMarginRateResult">
        <include refid="selectMaintenanceMarginRateVo"/>
        where id = #{id}
    </select>

    <insert id="insertMaintenanceMarginRate" parameterType="MaintenanceMarginRate" useGeneratedKeys="true" keyProperty="id">
        insert into maintenance_margin_rate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="symbol != null">symbol,</if>
            <if test="tier != null">tier,</if>
            <if test="notionalValueBegin != null">notional_value_begin,</if>
            <if test="notionalValueEnd != null">notional_value_end,</if>
            <if test="maxLeverage != null">max_leverage,</if>
            <if test="maintenanceMarginRate != null">maintenance_margin_rate,</if>
            <if test="maintenanceAmount != null">maintenance_amount,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="symbol != null">#{symbol},</if>
            <if test="tier != null">#{tier},</if>
            <if test="notionalValueBegin != null">#{notionalValueBegin},</if>
            <if test="notionalValueEnd != null">#{notionalValueEnd},</if>
            <if test="maxLeverage != null">#{maxLeverage},</if>
            <if test="maintenanceMarginRate != null">#{maintenanceMarginRate},</if>
            <if test="maintenanceAmount != null">#{maintenanceAmount},</if>
        </trim>
    </insert>

    <update id="updateMaintenanceMarginRate" parameterType="MaintenanceMarginRate">
        update maintenance_margin_rate
        <trim prefix="SET" suffixOverrides=",">
            <if test="symbol != null">symbol = #{symbol},</if>
            <if test="tier != null">tier = #{tier},</if>
            <if test="notionalValueBegin != null">notional_value_begin = #{notionalValueBegin},</if>
            <if test="notionalValueEnd != null">notional_value_end = #{notionalValueEnd},</if>
            <if test="maxLeverage != null">max_leverage = #{maxLeverage},</if>
            <if test="maintenanceMarginRate != null">maintenance_margin_rate = #{maintenanceMarginRate},</if>
            <if test="maintenanceAmount != null">maintenance_amount = #{maintenanceAmount},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteMaintenanceMarginRateById" parameterType="Long">
        delete from maintenance_margin_rate where id = #{id}
    </delete>

    <delete id="deleteMaintenanceMarginRateByIds" parameterType="String">
        delete from maintenance_margin_rate where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>